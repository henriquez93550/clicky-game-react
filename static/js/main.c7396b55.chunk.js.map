{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickTrue","event","clicked","changeDisplayLoser","resetScore","changeDisplayCorrect","correctGuess","shuffle","setScore","state","_this2","react_default","a","createElement","className","alt","id","src","image","onClick","name","occupation","location","Component","Wrapper","children","Title","display","score","topScore","App","friends","clickedFriends","setState","changeDisplayLost","resetFriends","sorted","toConsumableArray","i","length","handleShuffle","sort","b","Math","random","objectSpread","components_Wrapper","components_Title","map","friend","components_FriendCard","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c7396b55.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./style.css\";\n\nclass FriendCard extends Component {\n  constructor(props) {\n    super(props);\n  this.state = {\n    clicked: false\n  };\n}\n\n // when you click on an image\n    handleClickTrue = (event, clicked) => {\n    if(clicked === true) {// game is now over\n      // update the display\n      this.props.changeDisplayLoser();\n      // reset the score\n      this.props.resetScore();\n    } else { \n     // update the display\n      this.props.changeDisplayCorrect();\n      // update the status of \"clicked\" to true\n      this.props.correctGuess(event);\n      // shuffle the images around\n      this.props.shuffle();\n      // increase the score by one\n      this.props.setScore();\n     \n    }\n    }; \n    \n    \n    render() {\n        return (\n          <div className=\"card\">\n          <div className=\"img-container\">\n            <img alt={this.props.id} src={this.props.image} onClick={() => this.handleClickTrue(this.props.id, this.props.clicked)} />\n          </div>\n          <div className=\"content\">\n            <ul>\n              <li>\n                <strong>Name:</strong> {this.props.name}\n              </li>\n              <li>\n                <strong>Occupation:</strong> {this.props.occupation}\n              </li>\n              <li>\n                <strong>Location:</strong> {this.props.location}\n              </li>\n            </ul>\n          </div>\n        </div>\n            \n            );\n    }\n}\n\nexport default FriendCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Title = props => (\n  <div className=\"title\">\n  <div className=\"panel panel\">\n    <div className=\"panel-heading panel\">\n      <div className=\"row\">\n        <div className=\"col-md-4\">Clicky Game!</div>\n        <div className=\"col-md-4\">{props.display}</div>\n        <div className=\"col-md-2\">Score: {props.score} </div>\n        <div className=\"col-md-2\">High Score: {props.topScore}</div>\n      </div>\n    </div>\n    <div className=\"panel-body\">\n      Click on an image to earn points, but don't click on any more than once!\n    </div>\n  </div>\n  </div>\n);\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    score: 0,\n    topScore: 0,\n    friends: friends,\n    display: \"Click A Tile To Start\",\n    clickedFriends: []\n  };\n\n  // function to show user got answer correctly\n  changeDisplayCorrect = () => {\n    // update the display\n    this.setState({ display: \"Correct!\" });\n  };\n\n  // display this if they lost\n  changeDisplayLost = () => {\n    // update the display\n    this.setState({ display: \"Game Over! Try Again!\" });\n  };\n\n  setScore = () => {\n    // increase score by one\n    this.setState({ score: this.state.score + 1 });\n  };\n\n  resetScore = () => {\n    // update the topScore if the score is > topScore\n    if (this.state.score > this.state.topScore) {\n      this.setState({ topScore: this.state.score });\n      this.setState({ score: (this.state.score = 0) }); // then reset score to 0\n      this.resetFriends();\n    } else {\n      // reset the score\n      this.setState({ score: (this.state.score = 0) });\n      // reset the clicked value of all the cards\n      this.setState({ clickedFriends: [] });\n      this.resetFriends();\n    }\n  };\n\n  resetFriends = () => {\n    const sorted = [...this.state.friends];\n\n    for (var i = 0; i < sorted.length; i += 1) {\n      delete sorted[i].clicked;\n      sorted[i].clicked = false;\n    }\n    this.setState({ friends: sorted }, function() {});\n  };\n\n  handleShuffle = () => {\n    // copy all the values from this.state.friends...\n    // and puts them into this array\n    const sorted = [...this.state.friends];\n\n    // shuffle the images around\n    sorted.sort(function(a, b) {\n      return 0.5 - Math.random();\n    });\n    this.setState({\n      // replace the friends array with the sorted array\n      friends: sorted\n    });\n  };\n\n  correctGuess = event => {\n    const sorted = { ...this.state.friends };\n    for (var i = 0; i < this.state.friends.length; i += 1) {\n      if (sorted[i].id === event) {\n        delete sorted[i].clicked;\n        sorted[i].clicked = true;\n      } else {\n      }\n    }\n    this.setState({ friends: sorted }, function() {});\n  };\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title\n          score={this.state.score}\n          topScore={this.state.topScore}\n          display={this.state.display}\n        />\n        {/* for every friend in the friend card return data */}\n        {this.state.friends.map(friend => (\n          <FriendCard\n            resetScore={this.resetScore}\n            changeDisplayCorrect={this.changeDisplayCorrect}\n            changeDisplayLoser={this.changeDisplayLost}\n            handleClickTrue={this.handleClickTrue}\n            setScore={this.setScore}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n            shuffle={this.handleShuffle}\n            clicked={friend.clicked}\n            correctGuess={this.correctGuess}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}